name: "External PR verify"

on:
  workflow_dispatch:
    inputs:
      PR-number:
        description: 'Pull request number'
        required: true
      Repository-name:
        description: 'Repository name'
        required: true
        type: choice
        options:
        - intel/Enterprise-RAG
        - intel-innersource/applications.ai.enterprise-rag.enterprise-ai-solution
      SDL:
        description: 'Perform SDL scans'
        required: true
        type: choice
        options:
        - 'no'
        - 'yes'
      Validation-tests:
        description: 'Perform Validation tests'
        required: true
        type: choice
        options:
        - 'no'
        - 'yes'
      Create-PR:
        description: 'Copy PR code to internal Repo'
        required: true
        type: choice
        options:
        - 'no'
        - 'yes'

jobs:
  SDLScans:
    if: |
      (github.event.inputs.SDL == 'yes') && (github.event.inputs.Create-PR == 'no') &&
      (github.repository == 'intel-innersource/applications.ai.enterprise-rag.enterprise-ai-solution')
    runs-on: [innersource.prod.amr.dind]
    defaults:
      run:
        shell: bash
    container: cache-registry.caas.intel.com/cache/library/python:3.11
    name: SDL required
    environment: default
    permissions:
      id-token: write
      contents: read
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: SDL scan
      uses: ./.github/actions/sdl-scan
      with:
        Repository-name: ${{ github.event.inputs.Repository-name }}
        PR-number: ${{ github.event.inputs.PR-number }}

  validate-microservices:
    if: |
      (github.event.inputs.Validation-tests == 'yes') && (github.event.inputs.Create-PR == 'no') &&
      (github.repository == 'intel-innersource/applications.ai.enterprise-rag.enterprise-ai-solution')
    name: "Validation :: Microservices tests"
    runs-on: [ innersource.prod.amr.dind ]
    container: cache-registry.caas.intel.com/cache/library/ubuntu:24.04
    environment: default
    concurrency:
      group: validation
    permissions:
      id-token: write
      contents: read
      issues: write
      pull-requests: write
    defaults:
      run:
        shell: bash
    env:
      REMOTE_GAUDI_HOST: dcgaudicluster1
      REMOTE_WORKSPACE: "/tmp/${{ github.event.inputs.PR-number }}/${{ github.run_number }}/${{ github.run_attempt }}"
      SPECIFIC_TESTS: ""
    steps:
    - name: Checkout actions
      uses: actions/checkout@v4

    - name: Validation tests
      uses: ./.github/actions/validation-tests
      with:
        Repository-name: ${{ github.event.inputs.Repository-name }}
        PR-number: ${{ github.event.inputs.PR-number }}
        SSH_KEY: ${{ secrets.SSH_KEY }}
        SSH_CONFIG: ${{ secrets.SSH_CONFIG }}
        SSH_GAUDI1_KNOWN_HOSTS: ${{ secrets.SSH_GAUDI1_KNOWN_HOSTS }}
        RAG_SOLUTION_INFRA_PAT: ${{ secrets.RAG_SOLUTION_INFRA_PAT }}

  copy-pr:
    if: |
      (github.event.inputs.Create-PR == 'yes') &&
      (github.repository == 'intel-innersource/applications.ai.enterprise-rag.enterprise-ai-solution')
    runs-on: [innersource.prod.amr.dind]
    defaults:
      run:
        shell: bash
    container: cache-registry.caas.intel.com/cache/library/python:3.11
    name: Copy pull request
    permissions:
      contents: write
      id-token: write
      pull-requests: write
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Copy PR
        uses: ./.github/actions/copy-pr
        with:
          PR-number: ${{ github.event.inputs.PR-number }}
