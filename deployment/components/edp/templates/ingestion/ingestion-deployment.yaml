# Copyright (C) 2024-2025 Intel Corporation
# SPDX-License-Identifier: Apache-2.0

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.ingestion.nameOverride | default (include "helm-edp.fullname" .) }}
  labels:
    {{- include "helm-edp.selectorLabels" . | nindent 4 }}
spec:
  replicas: {{ .Values.ingestion.replicas }}
  selector:
    matchLabels:
      {{- include "helm-edp.ingestion.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- include "manifest.podLabels" (list .Values.ingestion.nameOverride .) | nindent 6 }}
      {{- include "manifest.tdx.annotations" (list .Values.ingestion.nameOverride .) | nindent 6 }}
    spec:
      {{- include "manifest.tdx.runtimeClassName" (list .Values.ingestion.nameOverride .) | nindent 6 }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "helm-edp.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: wait-for-redis
          image: redis:alpine
          imagePullPolicy: {{ .Values.ingestion.pullPolicy }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          envFrom:
            - configMapRef:
                name: edp-ingestion-configmap
          env:
            - name: REDIS_URL
              valueFrom:
                secretKeyRef:
                  name: vector-database-config
                  key: REDIS_URL
            - name: VECTOR_STORE
              valueFrom:
                secretKeyRef:
                  name: vector-database-config
                  key: VECTOR_STORE
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          command:
            - sh
            - -c
            - |
                if [ -z "$REDIS_URL" ]; then
                  echo "Environment variable REDIS_URL is not set. Skipping wait-for-redis init container.";
                  exit 1
                else
                  REDIS_URL_OBFUSCATED=$(echo $REDIS_URL | sed -e 's|//.*:.*@|//********:********@|')
                  until redis-cli -u $REDIS_URL ping | grep -q PONG; do
                    echo "waiting for redis server $REDIS_URL_OBFUSCATED to be ready...";
                    sleep 2;
                  done;
                fi;
      containers:
        - name: {{ .Values.ingestion.nameOverride }}
          env:
          {{- if .Values.proxy.httpProxy }}
            - name: http_proxy
              value: {{ .Values.proxy.httpProxy }}
          {{- end }}
          {{- if .Values.proxy.httpsProxy }}
            - name: https_proxy
              value: {{ .Values.proxy.httpsProxy }}
          {{- end }}
          {{- if .Values.proxy.noProxy }}
            - name: no_proxy
              value: {{ include "helm-edp.noProxyWithContainers" . | quote }}
          {{- end }}
          {{- if .Values.ingestion.environment }}
            {{- toYaml .Values.ingestion.environment | nindent 12 }}
          {{- end }}
          envFrom:
            - configMapRef:
                name: edp-ingestion-configmap
            - secretRef:
                name: vector-database-config
          securityContext:
            {{- toYaml .Values.securityContextWithTemp | nindent 12 }}
          {{ if .Values.alternateTagging }}
          image: {{ .Values.ingestion.repository }}:{{ .Values.ingestion.name }}_{{ .Values.ingestion.tag | default .Chart.AppVersion }}
          {{ else }}
          image: {{ .Values.ingestion.repository }}/{{ .Values.ingestion.name }}:{{ .Values.ingestion.tag | default .Chart.AppVersion }}
          {{ end }}
          imagePullPolicy: {{ .Values.ingestion.pullPolicy }}
          ports:
            - name: http
              containerPort: 6120
              protocol: TCP
          volumeMounts:
            - mountPath: /tmp
              name: tmp
          livenessProbe:
            failureThreshold: 24
            httpGet:
              path: v1/health_check
              port: http
            initialDelaySeconds: 5
            periodSeconds: 60
          readinessProbe:
            httpGet:
              path: v1/health_check
              port: http
            initialDelaySeconds: 5
            periodSeconds: 60
          startupProbe:
            failureThreshold: 120
            httpGet:
              path: v1/health_check
              port: http
            initialDelaySeconds: 5
            periodSeconds: 60
          resources:
            {{- $defaultValues := toYaml .Values.ingestion.resources | nindent 12 -}}
            {{- include "manifest.getResource" (list .Values.ingestion.nameOverride $defaultValues .Values) | nindent 12 }}
      volumes:
        - name: tmp
          emptyDir: {}
