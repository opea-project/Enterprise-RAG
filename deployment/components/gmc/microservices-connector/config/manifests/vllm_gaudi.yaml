---
# Source: vllm-gaudi/templates/configmap.yaml
# Copyright (C) 2024-2025 Intel Corporation
# SPDX-License-Identifier: Apache-2.0
{{- $modelName := required "Please specify a valid llm_model_gaudi name in your Helm chart values" .Values.llm_model_gaudi }}
{{- $port := "8000" }}

apiVersion: v1
kind: ConfigMap
metadata:
  name: vllm-gaudi-config
  labels:
    {{- include "manifest.labels" (list .filename .) | nindent 4 }}
data:
  {{- include "manifest.addEnvsAndEnvFile" (list .filename .) | nindent 2 }}
  {{- $configMapValues := (index (default dict .Values.modelConfigs) $modelName).configMapValues | default ((index .Values).defaultModelConfigs).configMapValues }}
  {{- if $configMapValues }}
    {{- range $key, $value := $configMapValues }}
      {{- printf "%s: %s" $key ($value | quote) | nindent 2 }}
    {{- end }}
  {{- end }}
  LLM_DEVICE: "hpu"
  PORT: {{ $port | quote }}
  http_proxy: {{ .Values.proxy.httpProxy | quote }}
  https_proxy: {{ .Values.proxy.httpsProxy | quote }}
  no_proxy: {{ .Values.proxy.noProxy | quote }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Values.pvc.modelLlm.name }}
spec:
  accessModes:
    - {{ .Values.pvc.modelLlm.accessMode }}
  resources:
    requests:
      storage: {{ .Values.pvc.modelLlm.storage }}
---
# Source: vllm/templates/service.yaml
# Copyright (C) 2024-2025 Intel Corporation
# SPDX-License-Identifier: Apache-2.0

apiVersion: v1
kind: Service
metadata:
  name: vllm
  labels:
    {{- include "manifest.labels" (list .filename .) | nindent 4 }}
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: {{ $port }}
      protocol: TCP
      name: vllm-gaudi
  selector:
    {{- include "manifest.selectorLabels" (list .filename .) | nindent 4 }}
---
# Source: vllm-gaudi/templates/deployment.yaml
# Copyright (C) 2024-2025 Intel Corporation
# SPDX-License-Identifier: Apache-2.0

apiVersion: apps/v1
kind: Deployment
metadata:
  name: vllm-gaudi
  labels:
    {{- include "manifest.labels" (list .filename .) | nindent 4 }}
spec:
  replicas: {{ include "getReplicas" (list .filename .Values) | default 1 }}
  selector:
    matchLabels:
    {{- include "manifest.selectorLabels" (list .filename .) | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "manifest.selectorLabels" (list .filename .) | nindent 8 }}
    spec:
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- include "gmc.imagePullSecrets" . }}
      containers:
        - name: vllm-gaudi
          envFrom:
            - configMapRef:
                name: vllm-gaudi-config
            - configMapRef:
                name: extra-env-config
                optional: true
          env:
            - name: HF_HOME
              value: /data
            - name: HF_TOKEN
              valueFrom:
                secretKeyRef:
                  name: hf-token-secret
                  key: HF_TOKEN
            {{- $defaultValues := "{limits: {habana.ai/gaudi: '8'}}" -}}
            {{- $resourceLimits := include "manifest.getResource" (list .filename $defaultValues .Values) | fromYaml }}
            - name: VLLM_TP_SIZE
              {{- $tppSize := (index (default dict .Values.modelConfigs) $modelName).tensor_parallel_size | default ((index .Values).defaultModelConfigs).tensor_parallel_size | default 1 }}
              value: {{ $tppSize | quote }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: {{ include "manifest.image" (list .filename .Values) }}
          imagePullPolicy: {{ toYaml (index .Values "images" .filename "pullPolicy" | default "Always") }}
          {{- $modelArgs := (index (default dict .Values.modelConfigs) $modelName).extraCmdArgs | default ((index .Values).defaultModelConfigs).extraCmdArgs }}
          {{- if $modelArgs }}
          {{- $cmd := concat (list "python3" "-m" "vllm.entrypoints.openai.api_server") $modelArgs (list "--model" $modelName "--tensor-parallel-size" $tppSize "--port" $port) }}
          command: ["/bin/bash", "-c", {{ join " " $cmd | quote }} ]
          {{- else }}
          command: ["/bin/bash", "-c", "python3 -m vllm.entrypoints.openai.api_server --model $(LLM_VLLM_MODEL_NAME) --max-num-seq $(VLLM_MAX_NUM_SEQS) --block-size $(VLLM_BLOCK_SIZE) --device $(LLM_DEVICE) --tensor-parallel-size $(VLLM_TP_SIZE) --pipeline-parallel-size 1 --dtype $(VLLM_DTYPE) --host 0.0.0.0 --port $(PORT) --disable-log-requests --download-dir /data" ]
          {{- end }}
          imagePullPolicy: Always
          volumeMounts:
            - mountPath: /data
              name: model-volume
            - mountPath: /tmp
              name: tmp
            - mountPath: /.cache
              name: cache
            - mountPath: /home/user/.config
              name: config
            - mountPath: /var/log
              name: var-log
          ports:
            - name: http
              containerPort: {{ $port }}
              protocol: TCP
          readinessProbe:
            initialDelaySeconds: 5
            periodSeconds: 60
            tcpSocket:
              port: http
          startupProbe:
            failureThreshold: 120
            initialDelaySeconds: 5
            periodSeconds: 60
            tcpSocket:
              port: http
          resources:
            limits:
              habana.ai/gaudi: {{ $tppSize | quote }}
      volumes:
        - name: model-volume
          persistentVolumeClaim:
            claimName: {{ .Values.pvc.modelLlm.name }}
        - name: tmp
          emptyDir: {}
        - name: cache
          emptyDir: {}
        - name: config
          emptyDir: {}
        - name: var-log
          emptyDir: {}
---
{{- if .Values.hpaEnabled }}
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: vllm-gaudi
  labels:
  {{- include "manifest.labels" (list .filename .) | nindent 4 }}
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: vllm-gaudi-svc-deployment
  minReplicas: {{ ( ((index .Values "services" .filename).hpa).minReplicas | default 1) }}
  maxReplicas: {{ ( ((index .Values "services" .filename).hpa).maxReplicas | default 4) }}
  metrics:
  - type: Object
    object:
      metric:
        # vLLM time metrics are in seconds
        name: vllm_token_latency_gaudi
      describedObject:
        apiVersion: v1
        # get metric for named object of given type (in same namespace)
        kind: Service
        name: vllm-gaudi-svc
      target:
        # vllm_token_latency is average for all the vLLM pods. To avoid replica fluctuations when
        # vLLM startup + request processing takes longer than HPA evaluation period, this uses
        # "Value" (replicas = metric.value / target.value), instead of "averageValue" type:
        #  https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/#algorithm-details
        type: Value
        value: {{ ( ((index .Values "services" .filename).hpa).targetValue | default "50m") }}
  {{- $hpaBehavior := ( ((index .Values "services" .filename).hpa).behavior) }}
  {{- if $hpaBehavior }}
  behavior:
    {{- toYaml $hpaBehavior | nindent 4 }}
  {{- else }}
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 180
      policies:
      - type: Percent
        value: 25
        periodSeconds: 90
    scaleUp:
      selectPolicy: Max
      stabilizationWindowSeconds: 0
      policies:
      - type: Pods
        value: 1
        periodSeconds: 150
  {{- end }}
{{- end }}
