apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "helm-ui.fullname" . }}
  labels:
    {{- include "helm-ui.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "helm-ui.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- include "manifest.podLabels" (list .Values.fullnameOverride .) | nindent 6 }}
      {{- include "manifest.tdx.annotations" (list .Values.fullnameOverride .) | nindent 6 }}
    spec:
      {{- include "manifest.tdx.runtimeClassName" (list .Values.fullnameOverride .) | nindent 6 }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "helm-ui.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          {{ if .Values.alternateTagging }}
          image: {{ .Values.image.ui.repository }}:{{ .Values.image.ui.name }}_{{ .Values.image.ui.tag | default .Chart.AppVersion }}
          {{ else }}
          image: {{ .Values.image.ui.repository }}/{{ .Values.image.ui.name }}:{{ .Values.image.ui.tag | default .Chart.AppVersion }}
          {{ end }}
          imagePullPolicy: {{ .Values.image.ui.pullPolicy }}
          env:
          {{- if .Values.proxy.httpProxy }}
            - name: http_proxy
              value: {{ .Values.proxy.httpProxy }}
          {{- end }}
          {{- if .Values.proxy.httpsProxy }}
            - name: https_proxy
              value: {{ .Values.proxy.httpsProxy }}
          {{- end }}
          {{- if .Values.proxy.noProxy }}
            - name: no_proxy
              value: {{ .Values.proxy.noProxy }}
          {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- $defaultValues := toYaml .Values.resources | nindent 12 -}}
            {{- include "manifest.getResource" (list .Values.fullnameOverride $defaultValues .Values) | nindent 12 }}
          volumeMounts:
            - name: nginx-cache
              mountPath: /var/cache/nginx
            - name: nginx-config-volume
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
            - name: ui-env-config-volume
              mountPath: /usr/share/nginx/html/config.json
              subPath: config.json
      volumes:
        - name: nginx-config-volume
          configMap:
            name: nginx-config
        - name: nginx-cache
          emptyDir: {}
        - name: ui-env-config-volume
          configMap:
            name: ui-env-config
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
