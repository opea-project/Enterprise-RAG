# Default values for helm.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

proxy:
  httpProxy: ""
  httpsProxy: ""
  noProxy: ""

veleroAccessKey: ""
veleroSecretKey: ""
minioAdminUser: "admin"
minioAdminPassword: ""

minioApiDomain: &minioApiDomain "velero-s3.erag.com"
minioBrowserDomain: &minioBrowserDomain "velero-minio.erag.com"
minio:
  enabled: true
  persistence:
    # storageClass: ""
    enabled: true
    size: 500Gi
  resources:
    requests:
      cpu: "1"
      memory: "4Gi"
    limits:
      cpu: "4"
      memory: "8Gi"
  auth:
    existingSecret: "velero-access-secret"
    rootUserSecretKey: "MINIO_ADMIN_USER"
    rootPasswordSecretKey: "MINIO_ADMIN_PASSWORD"

  metrics:
    enabled: true
  networkPolicy:
    extraIngress:
      - ports:
        - port: 15008
  ingress:
    enabled: true
    ingressClassName: "nginx"
    hostname: *minioBrowserDomain
    path: /
    tls: true
    extraTls:
    - hosts:
        - *minioBrowserDomain
      secretName: tls-secret
  apiIngress:
    enabled: true
    ingressClassName: "nginx"
    hostname: *minioApiDomain
    path: /
    tls: true
    extraTls:
    - hosts:
        - *minioApiDomain
    annotations:
      nginx.ingress.kubernetes.io/enable-cors: "true"
      nginx.ingress.kubernetes.io/cors-allow-origin: "*"
      nginx.ingress.kubernetes.io/cors-allow-headers: "Access-Control-Allow-Origin,DNT,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization"
  extraEnvVars:
    - name: "MINIO_DOMAIN"
      value: *minioApiDomain
  extraEnvVarsSecret: "velero-access-secret"
  extraVolumes:
    - name: tls-secret-volume
      secret:
        secretName: tls-secret
  extraVolumeMounts:
    - name: tls-secret-volume
      mountPath: "/certs/CAs"
      readOnly: true
  provisioning:
    enabled: true
    buckets:
      - name: 'velero'
        policy: 'none'
        purge: 'false'
    extraCommands:
        - mc admin accesskey rm provisioning $VELERO_ACCESS_KEY || true
        - mc admin accesskey create provisioning --access-key "${VELERO_ACCESS_KEY}" --secret-key "${VELERO_SECRET_KEY}" --name "${VELERO_NAME_KEY}" --description "Credentials for Velero Backup Service"
velero:
  resources: {}
  # requests:
  #   cpu: 500m
  #   memory: 128Mi
  # limits:
  #   cpu: 1000m
  #   memory: 512Mi
  initContainers:
    - name: velero-plugin-for-aws
      image: velero/velero-plugin-for-aws:v1.12.1
      imagePullPolicy: IfNotPresent
      volumeMounts:
        - mountPath: /target
          name: plugins
  credentials:
    useSecret: true
    existingSecret: velero-minio-access-secrets
  configuration:
    features: EnableCSI
    snapshotsEnabled: false
    uploaderType: kopia
    defaultItemOperationTimeout: 30m
    backupStorageLocation:
      - name: default
        provider: aws
        bucket: velero
        default: true
        config:
          region:
          s3ForcePathStyle: "true"
          s3Url: http://velero-minio.velero.svc:9000
    volumeSnapshotLocation: []
    extraEnvVars:
      - name: "NO_PROXY"
        value: "velero-minio.velero.svc"
