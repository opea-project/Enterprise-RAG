---
# Source: fgp-usvc/templates/configmap.yaml
# Copyright (C) 2024-2025 Intel Corporation
# SPDX-License-Identifier: Apache-2.0

apiVersion: v1
kind: ConfigMap
metadata:
  name: fgp-usvc-config
  labels:
    helm.sh/chart: fgp-usvc-0.8.0
    app.kubernetes.io/name: fgp-usvc
    app.kubernetes.io/instance: fgp-usvc
    app.kubernetes.io/version: "v0.8"
    app.kubernetes.io/managed-by: Helm
data:
  http_proxy: ""
  https_proxy: ""
  no_proxy: ""
  SYSTEM_FINGERPRINT_MONGODB_HOST: "fingerprint-mongodb.fingerprint.svc.cluster.local"
  SYSTEM_FINGERPRINT_MONGODB_PORT: "27017"
  MONGODB_NAME: "SYSTEM_FINGERPRINT"

---
# Source: fgp-usvc/templates/service.yaml
# Copyright (C) 2024-2025 Intel Corporation
# SPDX-License-Identifier: Apache-2.0

apiVersion: v1
kind: Service
metadata:
  name: fgp-usvc
  labels:
    helm.sh/chart: fgp-usvc-0.8.0
    app.kubernetes.io/name: fgp-usvc
    app.kubernetes.io/instance: fgp-usvc
    app.kubernetes.io/version: "v0.8"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 6012
      targetPort: 6012
      protocol: TCP
      name: fgp-usvc
  selector:
    app.kubernetes.io/name: fgp-usvc
    app.kubernetes.io/instance: fgp-usvc
---
# Source: fgp-usvc/templates/deployment.yaml
# Copyright (C) 2024-2025 Intel Corporation
# SPDX-License-Identifier: Apache-2.0

apiVersion: apps/v1
kind: Deployment
metadata:
  name: fgp-usvc
  labels:
    helm.sh/chart: fgp-usvc-0.8.0
    app.kubernetes.io/name: fgp-usvc
    app.kubernetes.io/instance: fgp-usvc
    app.kubernetes.io/version: "v0.8"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: fgp-usvc
      app.kubernetes.io/instance: fgp-usvc
  template:
    metadata:
      labels:
        app.kubernetes.io/name: fgp-usvc
        app.kubernetes.io/instance: fgp-usvc
    spec:
      securityContext:
        {}
      initContainers:
        - name: wait-for-mongo
          image: docker.io/bitnami/mongodb:8.0.4-debian-12-r0
          env:
            - name: MONGO_DATABASE_NAME
              valueFrom:
                secretKeyRef:
                  name: mongo-database-secret
                  key: MONGO_DATABASE_NAME
            - name: MONGO_USER
              valueFrom:
                secretKeyRef:
                  name: mongo-database-secret
                  key: MONGO_USER
            - name: MONGO_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongo-database-secret
                  key: MONGO_PASSWORD
            - name: MONGO_HOST
              valueFrom:
                secretKeyRef:
                  name: mongo-database-secret
                  key: MONGO_HOST
            - name: MONGO_PORT
              valueFrom:
                secretKeyRef:
                  name: mongo-database-secret
                  key: MONGO_PORT
          command:
            - sh
            - -c
            - |
                if [ -z "$MONGO_DATABASE_NAME" ] || [ -z "$MONGO_HOST" ] || [ -z "$MONGO_PORT" ] || [ -z "$MONGO_USER" ] || [ -z "$MONGO_PASSWORD" ]; then
                  echo "Environment variables MONGO_DATABASE_NAME, MONGO_HOST, MONGO_PORT, MONGO_USER OR MONGO_PASSWORD are not set. Skipping wait-for-mongo init container.";
                  exit 1
                else
                  until mongosh $MONGO_HOST:$MONGO_PORT/$MONGO_DATABASE_NAME --username $MONGO_USER --password $MONGO_PASSWORD --quiet --eval "db.runCommand({ connectionStatus: 1 })"; do
                    echo "Waiting for MongoDB...";
                    sleep 2;
                  done;
                fi;
      containers:
        - name: fgp-usvc
          image: "localhost:5000/system-fingerprint:latest"
          imagePullPolicy: Always
          ports:
            - name: fgp-usvc
              containerPort: 6012
              protocol: TCP
          env:
            - name: MONGODB_NAME
              valueFrom:
                secretKeyRef:
                  name: mongo-database-secret
                  key: MONGO_DATABASE_NAME
            - name: MONGO_USER
              valueFrom:
                secretKeyRef:
                  name: mongo-database-secret
                  key: MONGO_USER
            - name: MONGO_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongo-database-secret
                  key: MONGO_PASSWORD
          envFrom:
            - configMapRef:
                name: fgp-usvc-config
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - mountPath: /tmp
              name: tmp
          livenessProbe:
            failureThreshold: 24
            httpGet:
              path: v1/health_check
              port: fgp-usvc
            initialDelaySeconds: 5
            periodSeconds: 60
          readinessProbe:
            httpGet:
              path: v1/health_check
              port: fgp-usvc
            initialDelaySeconds: 5
            periodSeconds: 60
          startupProbe:
            failureThreshold: 60
            httpGet:
              path: v1/health_check
              port: fgp-usvc
            initialDelaySeconds: 5
            periodSeconds: 60
          resources:
            requests:
              memory: "64Mi"
              cpu: "250m"
            limits:
              memory: "128Mi"
              cpu: "500m"
      volumes:
        - name: tmp
          emptyDir: {}
