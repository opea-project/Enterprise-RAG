---
# Source: langdtct-usvc/templates/configmap.yaml
# Copyright (C) 2024-2025 Intel Corporation
# SPDX-License-Identifier: Apache-2.0

apiVersion: v1
kind: ConfigMap
metadata:
  name: langdtct-usvc-config
  labels:
    {{- include "manifest.labels" (list .filename .) | nindent 4 }}
data:
  {{- include "manifest.addEnvsAndEnvFile" (list .filename .) | nindent 2 }}
  http_proxy: {{ .Values.proxy.httpProxy | quote }}
  https_proxy: {{ .Values.proxy.httpsProxy | quote }}
  no_proxy: {{ .Values.proxy.noProxy | quote }}
---
# Source: langdtct-usvc/templates/service.yaml
# Copyright (C) 2024-2025 Intel Corporation
# SPDX-License-Identifier: Apache-2.0

apiVersion: v1
kind: Service
metadata:
  name: langdtct-usvc
  labels:
    {{- include "manifest.labels" (list .filename .) | nindent 4 }}
spec:
  type: ClusterIP
  ports:
  - port: 8001
    targetPort: 8001
    protocol: TCP
    name: langdtct-usvc
  selector:
    {{- include "manifest.selectorLabels" (list .filename .) | nindent 4 }}
---
# Source: langdtct-usvc/templates/deployment.yaml
# Copyright (C) 2024-2025 Intel Corporation
# SPDX-License-Identifier: Apache-2.0

apiVersion: apps/v1
kind: Deployment
metadata:
  name: langdtct-usvc
  labels:
    {{- include "manifest.labels" (list .filename .) | nindent 4 }}
spec:
  replicas: {{ include "getReplicas" (list .filename .Values) | default 1 }}
  selector:
    matchLabels:
    {{- include "manifest.selectorLabels" (list .filename .) | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "manifest.selectorLabels" (list .filename .) | nindent 8 }}
    spec:
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- include "gmc.imagePullSecrets" . }}
      containers:
      - name: langdtct-usvc
        envFrom:
        - configMapRef:
            name: langdtct-usvc-config
        - configMapRef:
            name: extra-env-config
            optional: true
        securityContext:
          {{- toYaml .Values.securityContext | nindent 10 }}
        image: {{ toYaml (index .Values "images" .filename "repository") }}/{{ toYaml (index .Values "images" .filename "path") }}/{{ toYaml (index .Values "images" .filename "image") }}:{{ toYaml (index .Values "images" .filename "tag") }}
        imagePullPolicy: {{ toYaml (index .Values "images" .filename "pullPolicy" | default "Always") }}
        ports:
        - name: langdtct-usvc
          containerPort: 8001
          protocol: TCP
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        livenessProbe:
          failureThreshold: 24
          httpGet:
            path: v1/health_check
            port: langdtct-usvc
          initialDelaySeconds: 90
          periodSeconds: 5
        readinessProbe:
          httpGet:
            path: v1/health_check
            port: langdtct-usvc
          initialDelaySeconds: 90
          periodSeconds: 5
        startupProbe:
          failureThreshold: 120
          httpGet:
            path: v1/health_check
            port: langdtct-usvc
          initialDelaySeconds: 90
          periodSeconds: 5
        resources:
          {{- $defaultValues := "{requests: {cpu: '1', memory: '2Gi'}, limits: {cpu: '4', memory: '4Gi'}}" -}}
          {{- include "manifest.getResource" (list .filename $defaultValues .Values) | nindent 12 }}
      volumes:
      - name: tmp
        emptyDir: {}
