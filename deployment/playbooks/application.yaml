---
- name: Install application
  hosts: localhost
  environment:
    K8S_AUTH_KUBECONFIG: "{{ kubeconfig }}"
  vars:
    components_dir: "{{ playbook_dir }}/../components"
    log_dir: "{{ playbook_dir }}/../ansible-logs"
  pre_tasks:
    - name: Create log directory if it does not exist
      ansible.builtin.file:
        path: "{{ log_dir }}"
        state: directory
        mode: '755'
      tags:
        - always
    - name: Run fingerprint role
      include_role:
        name: fingerprint
      when: fingerprint.enabled
      tags:
        - always
    - name: Run pipeline role with items
      include_role:
        name: pipeline
      with_items: "{{ pipelines }}"
      tags:
        - always
  roles:
    - role: certs
    - { role: ingress, when: ingress.enabled }
    - { role: istio, when: istio.enabled }
    - { role: keycloak, when: keycloak.enabled }
    - { role: apisix, when: apisix.enabled }
    - { role: ui, when: ui.enabled }
    - { role: edp, when: edp.enabled }
    - { role: telemetry, when: telemetry.enabled }
  # temp solution before splitting routes
  post_tasks:
    - name: Install apisix routes
      kubernetes.core.helm:
        name: "auth-apisix-crds"
        chart_ref: "{{ playbook_dir }}/../components/apisix-routes/"
        namespace: "auth-apisix"
        state: present
        force: true
      tags:
        - install
        - update
    - name: Delete apisix routes
      kubernetes.core.helm:
        name: "auth-apisix-crds"
        chart_ref: "{{ playbook_dir }}/../components/apisix-routes/"
        namespace: "auth-apisix"
        state: absent
      tags:
        - uninstall
    - name: Remove log directory
      ansible.builtin.file:
        path: "{{ log_dir }}"
        state: absent
      tags:
        - uninstall
    - name: Verify if all pods are in desired state
      include_role:
        name: check_pods
      tags:
        - install
        - uninstall
