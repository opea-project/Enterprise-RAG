# Copyright (C) 2024-2025 Intel Corporation
# SPDX-License-Identifier: Apache-2.0

---
- name: Set override_values.yaml path
  ansible.builtin.set_fact:
    apisix_helm_override_values_path: "{{ log_dir }}/{{ apisix.helm.chart_name }}-override-values.yaml"
    apisix_routes_helm_override_values_path: "{{ log_dir }}/{{ apisix_routes.helm.chart_name }}-override-values.yaml"
  tags:
    - install


- name: Ensure Helm repository is added
  kubernetes.core.helm_repository:
    name: "{{ apisix.helm.repo_name }}"
    repo_url: "{{ apisix.helm.repo_url }}"
    state: present
  tags:
    - install

- name: Build Helm chart dependencies
  ansible.builtin.command:
    cmd: helm dependency build
    chdir: "{{ apisix.helm.chart_directory }}"
  tags:
    - install

# Creates client_secret_id
- name: Get client_id keycloak
  vars:
    client_id: "{{ apisix.client_id }}"
  ansible.builtin.include_role:
    name: keycloak
    tasks_from: get_secret_id.yaml
  tags:
    - install

- name: Ensure namespace exists
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: "{{ apisix.namespace }}"
  tags:
    - install

- name: Enforce PSS
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: "{{ apisix.namespace }}"
        labels:
          pod-security.kubernetes.io/enforce: "privileged"
  when: enforcePSS
  tags:
    - install

- name: Create generic secret
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: "{{ apisix.secrets.secret_name }}"
        namespace: "{{ apisix.namespace }}"
      data:
        CLIENT_SECRET: "{{ client_secret_id.stdout | b64encode }}"
  no_log: "{{ secure_logs }}"
  tags:
    - install

- name: Install or Upgrade Helm chart
  kubernetes.core.helm:
    name: "{{ apisix.helm.release_name }}"
    chart_ref: "{{ apisix.helm.chart_directory }}"
    namespace: "{{ apisix.namespace }}"
    values_files: "{{ apisix.helm.default_values_file }}"
    state: present
    create_namespace: true
    timeout: "{{ helm_timeout }}"
  tags:
    - install

- name: Uninstall Helm chart
  kubernetes.core.helm:
    name: "{{ apisix.helm.release_name }}"
    namespace: "{{ apisix.namespace }}"
    state: absent
  tags:
    - uninstall

- name: Delete namespace
  kubernetes.core.k8s:
    state: absent
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: "{{ apisix.namespace }}"
  tags:
    - uninstall
