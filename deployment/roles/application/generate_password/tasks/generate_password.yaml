# Copyright (C) 2024-2025 Intel Corporation
# SPDX-License-Identifier: Apache-2.0

---
- name: Check if password already exists in password file
  ansible.builtin.shell: "grep -q '^{{ item.name }}_PASSWORD:' {{ password_file }}"
  register: password_exists_check
  changed_when: false
  ignore_errors: true
  no_log: "{{ secure_logs }}"
  tags:
    - install

- name: Generate password
  tags:
    - install
  when: password_exists_check.rc != 0
  block:
  - name: Generate a secure password if username line does not exist
    ansible.builtin.set_fact:
      password: "{{ lookup('community.general.random_string', min_lower=2, min_upper=2, min_special=2, min_numeric=2, length=12, override_special='_())') }}"
    no_log: "{{ secure_logs }}"
    tags:
      - install

  - name: Write username to the file if it does not exist
    ansible.builtin.lineinfile:
      path: "{{ password_file }}"
      line: "{{ item.name }}_USERNAME: {{ item.user }}"
      create: yes
      mode: '0600'
      regexp: "^{{ item.name }}_USERNAME:.*$"
      state: present
    no_log: "{{ secure_logs }}"
    tags:
      - install

  - name: Write password to the file if it does not exist
    ansible.builtin.lineinfile:
      path: "{{ password_file }}"
      line: "{{ item.name }}_PASSWORD: {{ password }}"
      create: yes
      mode: '0600'
      regexp: "^{{ item.name }}_PASSWORD:.*$"
      state: present
    no_log: "{{ secure_logs }}"
    tags:
      - install

  - name: Set fact for password
    ansible.builtin.set_fact:
      "{{ item.name }}_PASSWORD": "{{ password }}"
    no_log: "{{ secure_logs }}"
    tags:
      - install
