{#
Copyright (C) 2024-2025 Intel Corporation
SPDX-License-Identifier: Apache-2.0
#}

proxy:
  httpProxy: {{ httpProxy }}
  httpsProxy: {{ httpsProxy }}
  noProxy: {{ noProxy }}
tokens:
  hugToken: {{ huggingToken }}
common_tag: &tag {{ tag }}
common_registry: &repo {{ registry }}

{% if use_alternate_tagging is defined %}
alternateTagging: {{ use_alternate_tagging }}
{% endif %}

llm_model: &cpu_model {{ llm_model }}
llm_model_gaudi: &hpu_model {{ llm_model_gaudi }}
embedding_model_name: &embedding_model_name {{ embedding_model_name }}

{% if hpaEnabled is defined %}
hpaEnabled: {{ hpaEnabled }}
{% endif %}

{% if tdxEnabled is defined and tdxEnabled %}
tdx:
  common:
    kbsAddress: {{ KBS_ADDRESS }}
{% endif %}

{% if balloons.enabled is defined %}
balloons:
  enabled: {{ balloons.enabled }}
{% endif %}

{% if gmc.pvc is defined and gmc.pvc.models is defined %}
pvc:
{% for key, val in gmc.pvc.models.items() %}
  {{ key }}:
    name: {{ val.name }}
    storage: {{ val.storage }}
    accessMode: {{ val.accessMode if val.accessMode is defined else gmc.pvc.accessMode }}
{% endfor %}
{% endif %}

images:
  gmcManager:
    image: "erag-gmcmanager"
    repository: *repo
    tag: *tag
  gmcRouter:
    image: "erag-gmcrouter"
    repository: *repo
    tag: *tag
  text-extractor-usvc:
    image: "erag-text-extractor"
    repository: *repo
    tag: *tag
  text-compression-usvc:
    image: "erag-text-compression"
    repository: *repo
    tag: *tag
  text-splitter-usvc:
    image: "erag-text-splitter"
    repository: *repo
    tag: *tag
  embedding-usvc:
    image: "erag-embedding"
    repository: *repo
    tag: *tag
    envs:
      EMBEDDING_MODEL_NAME: *embedding_model_name
  reranking-usvc:
    image: "erag-reranking"
    repository: *repo
    tag: *tag
  teirerank:
    image: "erag-teirerank"
    repository: *repo
    tag: *tag
  teirerank_gaudi:
    image: "erag-teirerank_gaudi"
    repository: *repo
    tag: *tag
  prompt-template-usvc:
    image: "erag-prompt_template"
    repository: *repo
    tag: *tag
  torchserve_embedding:
    image: "erag-torchserve_embedding"
    repository: *repo
    tag: *tag
    envs:
      TORCHSERVE_MODEL_NAME: *embedding_model_name
  tei:
    envs:
      MODEL_ID: *embedding_model_name
  torchserve_reranking:
    image: "erag-torchserve_reranking"
    repository: *repo
    tag: *tag
  retriever-usvc:
    image: "erag-retriever"
    repository: *repo
    tag: *tag
    envs:
{% if edp.hierarchical_indices.enabled is true %}
      USE_HIERARCHICAL_INDICES: "True"
      K_SUMMARIES: {{ edp.hierarchical_indices.kSummaries }}
      K_CHUNKS: {{ edp.hierarchical_indices.kChunks }}
{% endif %}
{% if edp.rbac is defined and edp.rbac.enabled is true %}
      VECTOR_DB_RBAC: "true"
{% endif %}
  llm-usvc:
    image: "erag-llm"
    repository: *repo
    tag: *tag
  in-guard-usvc:
    image: "erag-in-guard"
    repository: *repo
    tag: *tag
  out-guard-usvc:
    image: "erag-out-guard"
    repository: *repo
    tag: *tag
  ui-usvc:
    image: "erag-chatqna-conversation-ui"
    repository: *repo
    tag: *tag
  vllm_gaudi:
    image: "erag-vllm-gaudi"
    repository: *repo
    tag: *tag
    envs:
      LLM_VLLM_MODEL_NAME: *hpu_model
  vllm:
    image: "erag-vllm-cpu"
    repository: *repo
    tag: *tag
    envs:
      LLM_VLLM_MODEL_NAME: *cpu_model
  langdtct-usvc:
    image: "erag-language-detection"
    repository: *repo
    tag: *tag
  fingerprint-usvc:
    image: "erag-system-fingerprint"
    repository: *repo
    tag: *tag
  chat-history-usvc:
    image: "erag-chat-history"
    repository: *repo
    tag: *tag
