# Copyright (C) 2024-2025 Intel Corporation
# SPDX-License-Identifier: Apache-2.0

---
- name: Generate self-signed certificate
  when: certs_autogenerate
  block:
    - name: Check if extra_san is defined
      ansible.builtin.fail:
        msg: "Variable 'extra_san' must be defined when calling this role"
      when: extra_san is not defined

    - name: Generate a private key
      community.crypto.openssl_privatekey:
        path: "{{ log_dir }}/{{ tls_file_prefix }}.key"
        type: RSA
        size: 4096

    - name: Generate a CSR with SANs
      community.crypto.openssl_csr:
        path: "{{ log_dir }}/{{ tls_file_prefix }}.csr"
        privatekey_path: "{{ log_dir }}/{{ tls_file_prefix }}.key"
        common_name: "{{ FQDN }}"
        subject_alt_name: "{{ extra_san | map('regex_replace', '^', 'DNS:') | join(',') }}"

    - name: Generate a self-signed certificate with SANs
      community.crypto.x509_certificate:
        path: "{{ log_dir }}/{{ tls_file_prefix }}.crt"
        privatekey_path: "{{ log_dir }}/{{ tls_file_prefix }}.key"
        csr_path: "{{ log_dir }}/{{ tls_file_prefix }}.csr"
        provider: selfsigned
        state: present

    - name: Set the path to the generated certificate and key
      ansible.builtin.set_fact:
        pathToCert: "{{ log_dir }}/{{ tls_file_prefix }}.crt"
        pathToKey: "{{ log_dir }}/{{ tls_file_prefix }}.key"

- name: Load existing certificates
  ansible.builtin.set_fact:
    pathToCert: "{{ certs_preset_pathToCert }}"
    pathToKey: "{{ certs_preset_pathToKey }}"
  when: not certs_autogenerate
