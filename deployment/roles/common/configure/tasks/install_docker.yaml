# Copyright (C) 2024-2025 Intel Corporation
# SPDX-License-Identifier: Apache-2.0

---
- name: Remove docker.list from sources.list
  become: true
  ansible.builtin.file:
    path: /etc/apt/sources.list.d/docker.list
    state: absent
  tags:
    - configure

- name: Make sure that older versions of docker are not present
  become: true
  ansible.builtin.apt:
    name:
      - docker-ce
      - docker-ce-cli
      - docker-compose-plugin
      - docker
      - docker-engine
      - docker.io
      - runc
      - containerd
    state: absent
  tags:
    - configure

- name: Add Dockerâ€™s official GPG key
  become: true
  ansible.builtin.apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present
  environment:
    http_proxy: "{{ httpProxy | default('') }}"
    https_proxy: "{{ httpsProxy | default('') }}"
    no_proxy: "{{ noProxy | default('') }}"
  tags:
    - configure

- name: Add Docker APT repository
  become: true
  ansible.builtin.apt_repository:
    repo: deb https://download.docker.com/linux/ubuntu {{ ansible_facts['lsb']['codename'] }} stable
    state: present
  tags:
    - configure

- name: Install Docker Engine
  become: true
  vars:
    full_docker_version: "5:{{ docker_version }}-1~ubuntu.{{ansible_distribution_version}}~{{ ansible_facts['lsb']['codename'] }}"
  ansible.builtin.apt:
    name:
      - docker-ce={{ full_docker_version }}
      - docker-ce-cli
      - containerd.io
    state: present
    update_cache: true
  retries: 3
  delay: 30
  register: result
  until: result is succeeded
  tags:
    - configure

- name: Add users to `docker` group
  become: true
  ansible.builtin.user:
    name: "{{ ansible_user }}"
    groups: ['docker']
    append: true
  tags:
    - configure

- name: "Create directory for docker config"
  file:
    path: "~/.docker/"
    state: directory
    mode: 0777
  when: httpProxy != "" or httpsProxy != "" or noProxy != ""
  tags:
    - configure

- name: "Create docker proxy file"
  template:
    src: templates/config.json.j2
    dest: "~/.docker/config.json"
    mode: 0777
  when: httpProxy != "" or httpsProxy != "" or noProxy != ""
  tags:
    - configure

- name: Check if Docker daemon.json exists
  stat:
    path: /etc/docker/daemon.json
  register: docker_daemon_json

- name: Backup existing Docker daemon.json
  copy:
    src: /etc/docker/daemon.json
    dest: /etc/docker/daemon.json.bak
    remote_src: true
  when: docker_daemon_json.stat.exists

- name: Create Docker daemon.json with proxy settings
  become: true
  ansible.builtin.template:
    src: templates/daemon.json.j2
    dest: /etc/docker/daemon.json
    mode: '0644'
  when: httpProxy != "" or httpsProxy != "" or noProxy != "" or insecure_registry != ""
  tags:
    - configure

- name: Reload systemd manager configuration
  become: true
  ansible.builtin.command: systemctl daemon-reload
  when: httpProxy != "" or httpsProxy != "" or noProxy != ""
  tags:
    - configure

- name: Restart Docker
  become: true
  ansible.builtin.systemd:
    name: docker
    state: restarted
    enabled: true
  when: httpProxy != "" or httpsProxy != "" or noProxy != ""
  tags:
    - configure
