# Copyright (C) 2024-2025 Intel Corporation
# SPDX-License-Identifier: Apache-2.0

---
- name: Check if OS is supported Ubuntu 22.04 or 24.04
  ansible.builtin.assert:
    that:
      - ansible_distribution == "Ubuntu"
      - ansible_distribution_version in ["22.04", "24.04"]
    fail_msg: >
      [WARNING]: This system is running {{ ansible_distribution }} {{ ansible_distribution_version }},
      which is not officially supported. Only Ubuntu 22.04 and 24.04 are validated.
      Proceeding may result in failures during dependency installation or unexpected behavior.
    success_msg: >
      [INFO]: This system is running {{ ansible_distribution }} {{ ansible_distribution_version }}
  ignore_errors: true
  tags:
    - configure

- name: Ensure required packages are installed
  become: true
  ansible.builtin.apt:
    name:
      - build-essential
      - make
      - zip
      - jq
      - apt-transport-https
      - ca-certificates
      - curl
      - software-properties-common
    state: present
    update_cache: true
  tags:
    - configure

- name: Check if docker is installed
  ansible.builtin.command: docker --version
  register: docker_check
  ignore_errors: true
  tags:
    - configure

- name: Include task install_docker.yaml
  ansible.builtin.include_tasks: install_docker.yaml
  when: docker_check.rc != 0
  tags:
    - configure

- name: Check if kubectl is installed
  ansible.builtin.command: kubectl version
  register: kubectl_check
  ignore_errors: true
  tags:
    - configure

- name: Download kubectl binary
  become: true
  ansible.builtin.get_url:
    url: https://dl.k8s.io/release/{{ kubectl_version }}/bin/linux/amd64/kubectl
    dest: /usr/local/bin/kubectl
    mode: '0755'
    owner: "{{ ansible_user }}"
  when: kubectl_check.rc != 0
  tags:
    - configure

- name: Check if helm is installed
  ansible.builtin.command: helm version
  register: helm_check
  ignore_errors: true
  tags:
    - configure

- name: Download Helm archive
  ansible.builtin.get_url:
    url: https://get.helm.sh/helm-{{ helm_version }}-linux-amd64.tar.gz
    dest: /tmp/helm-{{ helm_version }}-linux-amd64.tar.gz
    mode: '0644'
  tags:
    - configure

- name: Extract Helm binary
  become: true
  ansible.builtin.unarchive:
    src: /tmp/helm-{{ helm_version }}-linux-amd64.tar.gz
    dest: /usr/local/bin
    remote_src: true
    extra_opts:
      - "--strip-components=1"
  args:
    creates: /usr/local/bin/helm
  when: helm_check.rc != 0
  tags:
    - configure

- name: Set ownership and permissions for Helm binary
  become: true
  ansible.builtin.file:
    path: /usr/local/bin/helm
    owner: "{{ ansible_user }}"
    mode: '0755'
  tags:
    - configure
