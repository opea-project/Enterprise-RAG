---
# chatqa hardcoded for now
# check before update dependencises
- name: Set override_values.yaml path
  ansible.builtin.set_fact:
    fingerprint_helm_override_values_path: "{{ log_dir }}/{{ fingerprint_helm_chart_name }}-override-values.yml"
  tags:
    - always

# Check if module can be used
- name: Update Helm chart dependencies
  ansible.builtin.command:
    cmd: helm dependency update
    chdir: "{{ fingerprint_helm_chart_directory }}"
  tags:
    - install
    - update

- name: Set facts for password generation
  ansible.builtin.set_fact:
    fingerprint_admin_password_file_path: "{{ log_dir }}/{{ fingerprint_admin_password_file_name }}.txt"
    fingerprint_password_file_path: "{{ log_dir }}/{{ fingerprint_password_file_name }}.txt"
  tags:
    - install
    - uninstall

- name: Generate password or load from file
  ansible.builtin.include_role:
    name: generate_password
  with_items:
    - { generate_password_path: "{{ fingerprint_password_file_path }}" }
  tags:
    - install

- name: Set generated passwords
  ansible.builtin.set_fact:
    fingerprint_db_password: "{{ password }}"
  tags:
    - install

- name: Generate password or load from file
  ansible.builtin.include_role:
    name: generate_password
  with_items:
    - { generate_password_path: "{{ fingerprint_admin_password_file_path }}" }
  tags:
    - install

- name: Set generated passwords
  ansible.builtin.set_fact:
    fingerprint_db_root_password: "{{ password }}"
  tags:
    - install

# hardcoded chatqa
- name: Ensure namespace exists
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: "{{ item }}"
  with_items:
    - "{{ fingerprint_helm_namespace }}"
    - chatqa
  tags:
    - install
    - update

# - name: Add istio label to namespace
#   kubernetes.core.k8s:
#     api_version: v1
#     kind: Namespace
#     name: "{{ fingerprint_helm_namespace }}"
#     definition:
#       metadata:
#         labels:
#           istio.io/dataplane-mode: ambient
#     force: true
#   tags:
#     - install
#     - update

- name: Create password secret
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: "{{ fingerprint_password_secret_name }}"
        namespace: "{{ item }}"
      data:
        MONGO_DATABASE_NAME: "{{ fingerprint_mongo_db_name | b64encode }}"
        MONGO_USER: "{{ fingerprint_mongo_user | b64encode }}"
        MONGO_PASSWORD: "{{ fingerprint_db_password | b64encode }}"
        MONGO_HOST: "{{ ('fingerprint-mongodb.' + fingerprint_helm_namespace + '.svc') | b64encode }}"
        MONGO_PORT: "{{ '27017' | b64encode }}"
  # no_log: true
  with_items:
    - "{{ fingerprint_helm_namespace }}"
    - chatqa
  tags:
    - install

- name: Generate override values file from template
  ansible.builtin.template:
    src: "values.yaml.j2"
    dest: "{{ fingerprint_helm_override_values_path }}"
    mode: '0644'
  tags:
    - install
    - update

- name: Set values_files list
  ansible.builtin.set_fact:
    values_files: >
      {{
        [fingerprint_helm_default_values_file] +
        [fingerprint_helm_override_values_path]
      }}
  tags:
    - install
    - update

- name: Install or Upgrade Helm chart
  kubernetes.core.helm:
    name: "{{ fingerprint_helm_release_name }}"
    chart_ref: "{{ fingerprint_helm_chart_directory }}"
    namespace: "{{ fingerprint_helm_namespace }}"
    values_files: "{{ values_files }}"
    state: present
    create_namespace: true
  register: helm_result
  tags:
    - install
    - update

- name: Delete password secret
  kubernetes.core.k8s:
    state: absent
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: "{{ fingerprint_password_secret_name }}"
        namespace: "{{ item }}"
  with_items:
    - "{{ fingerprint_helm_namespace }}"
    - "chatqa"
  tags:
    - uninstall

- name: Uninstall Helm chart
  kubernetes.core.helm:
    name: "{{ fingerprint_helm_release_name }}"
    namespace: "{{ fingerprint_helm_namespace }}"
    state: absent
  tags:
    - uninstall

- name: Delete namespace
  kubernetes.core.k8s:
    state: absent
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: "{{ fingerprint_helm_namespace }}"
  tags:
    - uninstall

- name: Remove password file
  ansible.builtin.file:
    state: absent
    path: "{{ item }}"
  with_items:
    - "{{ fingerprint_password_file_path }}"
    - "{{ fingerprint_admin_password_file_path }}"
  tags:
    - uninstall
