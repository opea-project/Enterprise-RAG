---
- name: Create namespace habana-ai-operator
  kubernetes.core.k8s:
    api_version: v1
    kind: Namespace
    name: habana-ai-operator
    state: present
  tags: install

- name: Label namespace with pod security policies
  kubernetes.core.k8s:
    api_version: v1
    kind: Namespace
    name: habana-ai-operator
    definition:
      metadata:
        labels:
          pod-security.kubernetes.io/enforce: privileged
          pod-security.kubernetes.io/audit: privileged
          pod-security.kubernetes.io/warn: privileged
  tags: install

- name: Add and update Helm repo for Habana AI Operator
  kubernetes.core.helm_repository:
    name: gaudi-helm
    repo_url: https://vault.habana.ai/artifactory/api/helm/gaudi-helm
    state: present
  tags: install

- name: Install or upgrade Habana AI Operator using Helm with values file
  kubernetes.core.helm:
    name: habana-ai-operator
    chart_ref: gaudi-helm/habana-ai-operator
    chart_version: "{{ habana_driver_version }}"
    release_namespace: habana-ai-operator
    create_namespace: true
    values_files: "{{ role_path }}/files/config.yaml"
    state: present
    wait: true
    timeout: "{{ helm_timeout }}"
  tags:
    - install

- name: Wait for habana-ai-driver pod to be created
  kubernetes.core.k8s_info:
    kind: Pod
    namespace: habana-ai-operator
  register: driver_pods
  until: >
    driver_pods.resources | selectattr('metadata.name', 'search', 'habana-ai-driver') | list | length > 0
  retries: 60
  delay: 15
  tags: install

- name: Wait until all init containers in habana-ai-driver pod are successfully completed
  vars:
    pod_name: "{{ driver_pods.resources | selectattr('metadata.name', 'search', 'habana-ai-driver') | map(attribute='metadata.name') | first }}"
  kubernetes.core.k8s_info:
    kind: Pod
    namespace: habana-ai-operator
    name: "{{ pod_name }}"
  register: current_driver_pod
  until: >
    current_driver_pod.resources[0].status.initContainerStatuses is defined and
    current_driver_pod.resources[0].status.initContainerStatuses
    | selectattr('state.terminated', 'defined')
    | selectattr('state.terminated.exitCode', 'equalto', 0)
    | list | length ==
    current_driver_pod.resources[0].status.initContainerStatuses | length
  retries: 60
  delay: 15
  tags: install

- name: Wait for habana-ai-device-plugin pod to be created
  kubernetes.core.k8s_info:
    kind: Pod
    namespace: habana-ai-operator
  register: plugin_pods
  until: >
    plugin_pods.resources | selectattr('metadata.name', 'search', 'habana-ai-device-plugin') | list | length > 0
  retries: 10
  delay: 5
  tags: install

- name: Get all pods in the habana-ai-operator namespace
  kubernetes.core.k8s_info:
    kind: Pod
    namespace: habana-ai-operator
  register: all_pods
  tags: install

- name: Initialize unready pod list
  set_fact:
    unready_pods: []
  tags: install

- name: Identify unready pods
  set_fact:
    unready_pods: "{{ unready_pods + [item.metadata.name] }}"
  loop: "{{ all_pods.resources }}"
  when: >
    item.status.phase != 'Running' or
    (
      item.status.containerStatuses is defined and
      (
        item.status.containerStatuses | selectattr('ready', 'equalto', false) | list | length > 0
      )
    )
  no_log: "{{ secure_logs }}"
  tags: install

- name: Get all nodes
  kubernetes.core.k8s_info:
    kind: Node
  register: habana_nodes
  tags: install

- name: Initialize Gaudi node list
  set_fact:
    gaudi_nodes: []
  tags: install

- name: Identify Gaudi nodes manually
  set_fact:
    gaudi_nodes: "{{ gaudi_nodes + [item] }}"
  loop: "{{ habana_nodes.resources }}"
  when: item.metadata.labels is defined and
        item.metadata.labels['habana.ai/device.family'] is defined and
        item.metadata.labels['habana.ai/device.family'] == 'gaudi'
  no_log: "{{ secure_logs }}"
  tags: install

- name: Print number of Gaudi nodes
  debug:
    msg: "Number of Gaudi nodes: {{ gaudi_nodes | length }}"
  tags: install

- name: Count total Gaudi cards manually
  set_fact:
    total_gaudi_cards: "{{ total_gaudi_cards | default(0) + (item.status.capacity['habana.ai/gaudi'] | int) }}"
  loop: "{{ gaudi_nodes }}"
  when: item.status.capacity is defined and item.status.capacity['habana.ai/gaudi'] is defined
  no_log: "{{ secure_logs }}"
  tags: install

- name: Print total number of Gaudi cards
  debug:
    msg: "Total number of Gaudi cards: {{ total_gaudi_cards }}"
  tags: install

- name: Find nodes with incorrect Habana Gaudi capacity
  set_fact:
    invalid_nodes: >-
      {{
        gaudi_nodes
        | selectattr("status.capacity['habana.ai/gaudi']", "defined")
        | selectattr("status.capacity['habana.ai/gaudi']", "ne", "8")
        | map(attribute="metadata.name")
        | list
      }}
  tags: install

- name: Fail if any Gaudi node has incorrect capacity
  fail:
    msg: >-
      The following nodes do not have the correct Habana Gaudi capacity:
      {% for node in gaudi_nodes %}
        {% if node.metadata.name in invalid_nodes %}
          - {{ node.metadata.name }} (actual: {{ node.status.capacity['habana.ai/gaudi'] }}, expected: 8)
        {% endif %}
      {% endfor %}
      {% set message = gaudi_nodes | selectattr("metadata.name", "in", invalid_nodes") %}
  when: invalid_nodes | length > 0
  tags: install

- name: Uninstall Habana AI Operator Helm release
  kubernetes.core.helm:
    name: habana-ai-operator
    release_namespace: habana-ai-operator
    state: absent
  tags: uninstall

- name: Remove pod security labels from habana-ai-operator namespace
  kubernetes.core.k8s:
    api_version: v1
    kind: Namespace
    name: habana-ai-operator
    definition:
      metadata:
        labels:
          pod-security.kubernetes.io/enforce: null
          pod-security.kubernetes.io/audit: null
          pod-security.kubernetes.io/warn: null
  tags: uninstall

- name: Delete namespace habana-ai-operator
  kubernetes.core.k8s:
    api_version: v1
    kind: Namespace
    name: habana-ai-operator
    state: absent
  tags: uninstall

