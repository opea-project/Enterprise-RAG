# Copyright (C) 2024-2025 Intel Corporation
# SPDX-License-Identifier: Apache-2.0

---
- name: Check if username line exists in the file
  ansible.builtin.shell:  "grep -q '^{{ item.name }}_USERNAME:.*$' {{ password_file }}"
  register: username_line_check
  ignore_errors: true
  no_log: "{{ secure_logs }}"
  tags:
    - install

- name: Generate a secure password if username line does not exist
  ansible.builtin.set_fact:
    password: "{{ lookup('community.general.random_string', min_lower=2, min_upper=2, min_special=2, min_numeric=2, length=12, override_special='_())') }}"
  when: username_line_check.rc != 0
  no_log: "{{ secure_logs }}"
  tags:
    - install

- name: Write username to the file if it does not exist
  ansible.builtin.lineinfile:
    path: "{{ password_file }}"
    line: "{{ item.name }}_USERNAME: {{ item.user }}"
    create: yes
    mode: '0600'
    regexp: "^{{ item.name }}_USERNAME:.*$"
    state: present
  when: username_line_check.rc != 0
  no_log: "{{ secure_logs }}"
  tags:
    - install

- name: Write password to the file if it does not exist
  ansible.builtin.lineinfile:
    path: "{{ password_file }}"
    line: "{{ item.name }}_PASSWORD: {{ password }}"
    create: yes
    mode: '0600'
    regexp: "^{{ item.name }}_PASSWORD:.*$"
    state: present
  when: username_line_check.rc != 0
  no_log: "{{ secure_logs }}"
  tags:
    - install

- name: Load the passwords from the file
  ansible.builtin.include_vars:
    file: "{{ password_file }}"
  no_log: "{{ secure_logs }}"
  tags:
    - install
