# Copyright (C) 2024-2025 Intel Corporation
# SPDX-License-Identifier: Apache-2.0

---
- name: Set override_values.yaml path
  ansible.builtin.set_fact:
    istio_helm_override_values_path: "{{ tmp_dir }}/{{ istio.helm.chart_name }}-override-values.yaml"

- name: Ensure Helm repository is added
  kubernetes.core.helm_repository:
    name: "{{ istio.helm.repo_name }}"
    repo_url: "{{ istio.helm.repo_url }}"
    state: present
  tags:
    - install

- name: Build Helm chart dependencies
  ansible.builtin.command:
    cmd: helm dependency build
    chdir: "{{ istio.helm.chart_directory }}"
  tags:
    - install

- name: Ensure namespace exists
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: "{{ istio.namespace }}"
  tags:
    - install

- name: Enforce PSS
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: "{{ istio.namespace }}"
        labels:
          pod-security.kubernetes.io/enforce: "privileged"
  when: enforcePSS
  tags:
    - install

- name: Set values_files list
  ansible.builtin.set_fact:
    values_files: >
      {{
        [istio.helm.default_values_file] +
        ([istio.helm.custom_init_container_values_file] if (tdxEnabled is defined and tdxEnabled | bool) else [])
      }}
  tags:
    - install

- name: Install or Upgrade Helm chart
  kubernetes.core.helm:
    name: "{{ istio.helm.release_name }}"
    chart_ref: "{{ istio.helm.chart_directory }}"
    namespace: "{{ istio.namespace }}"
    values_files: "{{ values_files }}"
    state: present
    create_namespace: true
    timeout: "{{ helm_timeout }}"
  tags:
    - install
    - update

- name: Uninstall Helm chart
  kubernetes.core.helm:
    name: "{{ istio.helm.release_name }}"
    namespace: "{{ istio.namespace }}"
    state: absent
    purge: true
  tags:
    - uninstall

- name: Delete namespace
  kubernetes.core.k8s:
    state: absent
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: "{{ istio.namespace }}"
  tags:
    - uninstall

- name: Get crds
  kubernetes.core.k8s_info:
    kind: CustomResourceDefinition
  register: istio_crds
  tags:
    - uninstall

- name: Remove Istio CRDs
  kubernetes.core.k8s:
    state: absent
    definition: "{{ item }}"
  loop: "{{ istio_crds.resources | selectattr('metadata.name', 'search', 'istio.io') | list }}"
  loop_control:
    label: "{{ item.metadata.name }}"
  when: istio_crds.resources | length > 0
  tags:
    - uninstall
