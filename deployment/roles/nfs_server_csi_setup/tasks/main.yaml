# INSTALL TASKS
- name: Label the user-defined node for NFS scheduling
  kubernetes.core.k8s:
    api_version: v1
    kind: Node
    name: "{{ nfs_node_name }}"
    definition:
      metadata:
        labels:
          nfs-node: "true"
    state: patched
  tags:
    - install
    - post-install

- name: Create NFS namespace
  kubernetes.core.k8s:
    api_version: v1
    kind: Namespace
    name: "{{ nfs_namespace }}"
    state: present
  tags:
    - install
    - post-install

- name: Create NFS export directory on the labeled node using a Kubernetes Job
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', 'nfs-init-job.yaml.j2') }}"
  tags:
    - install
    - post-install

- name: Deploy NFS server deployment and service
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', 'nfs-server.yaml.j2') }}"
  tags:
    - install
    - post-install

- name: Add CSI driver Helm repo
  kubernetes.core.helm_repository:
    name: csi-driver-nfs
    repo_url: https://raw.githubusercontent.com/kubernetes-csi/csi-driver-nfs/master/charts
  tags:
    - install
    - post-install

- name: Install CSI NFS driver via Helm
  kubernetes.core.helm:
    name: csi-driver-nfs
    chart_ref: csi-driver-nfs/csi-driver-nfs
    release_namespace: kube-system
    create_namespace: false
    chart_version: "{{ nfs_csi_driver_version }}"
    values:
      externalSnapshotter:
        enabled: true
      controller:
        useTarCommandInSnapshot: true
      storageClass:
        annotations:
          storageclass.kubernetes.io/is-default-class: "true"
        create: true
        name: "{{ nfs_csi_storage_class }}"
        parameters:
          server: "{{ nfs_server_ip }}"
          share: "/data"
        volumeBindingMode: "WaitForFirstConsumer"
        mountOptions:
          - "nfsvers=4"
  tags:
    - install
    - post-install

- name: Get all StorageClasses
  kubernetes.core.k8s_info:
    api_version: storage.k8s.io/v1
    kind: StorageClass
  register: sc_list
  tags:
    - install
    - post-install

- name: Remove default annotation from non-nfs-csi StorageClasses
  kubernetes.core.k8s_json_patch:
    api_version: storage.k8s.io/v1
    kind: StorageClass
    name: "{{ item.metadata.name }}"
    patch:
      - op: remove
        path: /metadata/annotations/storageclass.kubernetes.io~1is-default-class
  loop: "{{ sc_list.resources }}"
  when:
    - item.metadata.name != nfs_csi_storage_class
    - item.metadata.annotations is defined
    - item.metadata.annotations['storageclass.kubernetes.io/is-default-class'] is defined
  tags:
    - install
    - post-install

# DELETE TASKS
- name: Uninstall CSI NFS driver
  kubernetes.core.helm:
    name: csi-driver-nfs
    release_namespace: kube-system
    state: absent
  tags:
    - delete

- name: Remove NFS export directory on the labeled node using a Kubernetes Job
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', 'nfs-cleanup-job.yaml.j2') }}"
  tags:
    - delete

- name: Delete NFS server deployment and service
  kubernetes.core.k8s:
    state: absent
    definition: "{{ lookup('template', 'nfs-server.yaml.j2') }}"
  tags:
    - delete

- name: Remove the NFS node label
  kubernetes.core.k8s:
    api_version: v1
    kind: Node
    name: "{{ nfs_node_name }}"
    definition:
      metadata:
        labels:
          nfs-node: null
    state: patched
  tags:
    - delete
