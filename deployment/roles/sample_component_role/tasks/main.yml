---
# Sample content ; quite outdated. I'd like to collect here all of the tasks that may be reused with explanation
- name: Set roles facts
  ansible.builtin.set_fact:
    helm_override_values_filename: "{{ helm_chart_name }}-override-values.yml"
    helm_override_values_path: "{{ log_dir }}/{{ helm_override_values_filename }}"

- name: print values_files_dict
  debug:
    var: values_files_dict
  tags:
    - install
    - update

- name: Add Helm repository
  kubernetes.core.helm_repository:
    name: "{{ helm_repo_name }}"
    repo_url: "{{ helm_repo_url }}"
  tags:
    - install
    - update

- name: Update Helm repositories
  kubernetes.core.helm_repository:
    name: "{{ helm_repo_name }}"
    repo_url: "{{ helm_repo_url }}"
    state: present
  tags:
    - install
    - update

- name: Check if override values file should be generated
  ansible.builtin.set_fact:
    generate_override: "{{ core.ingress.additional_values is defined and core.ingress.additional_values | dict2items | length > 0 }}"
  tags:
    - install
    - update

- name: Generate override values file from template
  ansible.builtin.template:
    src: "values.yml.j2"
    dest: "{{ helm_override_values_path }}"
  when: generate_override
  tags:
    - install
    - update

- name: Set values_files list
  ansible.builtin.set_fact:
    values_files: >
      {{
        [helm_default_values_file] +
        ([playbook_dir + '/override-values.yaml'] if generate_override else [])
      }}
  tags:
    - install
    - update

- name: Create TLS secret
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: "{{ tls_secret_name }}"
        namespace: "{{ helm_namespace }}"
      data:
        tls.crt: "{{ certs.pathToCert | b64encode }}"
        tls.key: "{{ certs.pathToKey | b64encode}}"
      type: kubernetes.io/tls
  tags:
    - install
    - update

- name: Install or Upgrade Helm chart
  kubernetes.core.helm:
    name: "{{ helm_release_name }}"
    chart_ref: "{{ helm_repo_name }}/{{ helm_chart_name }}"
    chart_version: "{{ helm_chart_version }}"
    namespace: "{{ helm_namespace }}"
    values_files: "{{ values_files }}"
    state: present
    create_namespace: true
  register: helm_result
  tags:
    - install
    - update

- name: Uninstall Helm chart
  kubernetes.core.helm:
    name: "{{ helm_release_name }}"
    namespace: "{{ helm_namespace }}"
    state: absent
  tags:
    - uninstall
