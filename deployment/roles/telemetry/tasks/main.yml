---
# telemetry might be moved to other playbook ; but needs to be designed how to interact with istio
- name: Set roles facts
  ansible.builtin.set_fact:
    telemetry_monitoring_helm_override_values_path: "{{ log_dir }}/telemetry-monitoring-override-values.yml"
  tags:
    - install
    - update
    - uninstall

- name: Update Helm repositories
  kubernetes.core.helm_repository:
    name: "{{ item.name }}"
    repo_url: "{{ item.url }}"
    state: present
  loop:
    - { url: "{{ telemetry_prometheus_helm_repo }}", name: "prometheus-community" }
    - { url: "{{ telemetry_grafana_helm_repo }}", name: "grafana" }
    - { url: "{{ telemetry_opensearch_helm_repo }}", name: "opensearch" }
    - { url: "{{ telemetry_opensearch_collector_helm_repo }}", name: "opentelemetry" }
  tags:
    - install
    - update

- name: Update Helm chart dependencies
  ansible.builtin.command:
    cmd: helm dependency update
    chdir: "{{ item }}"
  with_items:
    - "{{ telemetry_charts_path }}"
    - "{{ telemetry_logging_charts_path }}"
    - "{{ telemetry_traces_charts_path }}"
    - "{{ telemetry_traces_instr_charts_path }}"
  # when: not all_deps_ok
  tags:
    - install
    - update

- name: Ensure namespace exists
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: "{{ item }}"
  with_items:
    - "{{ telemetry_monitoring_namespace }}"
    - "{{ telemetry_traces_namespace }}"
  tags:
    - install
    - update

# - name: Add istio label to namespace
#   kubernetes.core.k8s:
#     api_version: v1
#     kind: Namespace
#     name: "{{ item }}"
#     labels:
#       istio.io/dataplane-mode: ambient
#     force: true
#   with_items:
#     - "{{ telemetry_monitoring_namespace }}"
#     - "{{ telemetry_traces_namespace }}"
#   tags:
#     - install
#     - update

- name: Create TLS secret
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: "{{ telemetry_grafana_tls_secret_name }}"
        namespace: "{{ telemetry_monitoring_namespace }}"
      data:
        tls.crt: "{{ lookup('file', pathToCert) | b64encode }}"
        tls.key: "{{ lookup('file', pathToKey) | b64encode }}"
      type: kubernetes.io/tls
  tags:
    - install
    - update

- name: Set facts for password generation
  ansible.builtin.set_fact:
    telemetry_password_file_path: "{{ log_dir }}/{{ telemetry_grafana_password_file_name }}.txt"
  tags:
    - install
    - uninstall

- name: Generate password or load from file
  ansible.builtin.include_role:
    name: generate_password
  with_items:
    - { generate_password_path: "{{ telemetry_password_file_path }}" }
  tags:
    - install

- name: Set generated passwords
  ansible.builtin.set_fact:
    telemetry_admin_password: "{{ password }}"
  tags:
    - install

- name: Create password secret
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: "{{ telemetry_password_secret_name }}"
        namespace: "{{ telemetry_monitoring_namespace }}"
      data:
        user: "{{ telemetry_admin_user | b64encode }}"
        password: "{{ telemetry_admin_password | b64encode }}"
  no_log: true
  tags:
    - install

- name: Generate override values file from template
  ansible.builtin.template:
    src: "values.yaml.j2"
    dest: "{{ telemetry_monitoring_helm_override_values_path }}"
    mode: '0644'
  tags:
    - install
    - update

- name: Set values_files list
  ansible.builtin.set_fact:
    values_files: >
      {{
        [telemetry_monitoring_helm_default_values_file] +
        [telemetry_monitoring_helm_override_values_path]
      }}
  tags:
    - install
    - update

- name: Get the secret from the source namespace
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Secret
    name: vector-database-config
    namespace: chatqa
  register: secret_info
  no_log: true
  tags:
    - install
    - update

- name: Create the secret in the target namespace
  kubernetes.core.k8s:
    api_version: v1
    kind: Secret
    name: vector-database-config
    namespace: "{{ telemetry_monitoring_namespace }}"
    state: present
    definition:
      metadata:
        name: "{{ secret_info.resources[0].metadata.name }}"
        namespace: "{{ telemetry_monitoring_namespace }}"
      data: "{{ secret_info.resources[0].data }}"
      type: "{{ secret_info.resources[0].type }}"
  no_log: true
  tags:
    - install
    - update

- name: Install monitoring Helm chart
  kubernetes.core.helm:
    name: kube-prometheus-stack
    chart_ref: "{{ telemetry_charts_path }}"
    release_namespace: "{{ telemetry_monitoring_namespace }}"
    release_name: kube-prometheus-stack
    state: present
    values_files: "{{ values_files }}"
    create_namespace: true
    wait: true
  tags:
    - install
    - update

- name: Install logging Helm chart
  kubernetes.core.helm:
    name: loki-stack
    chart_ref: "{{ telemetry_logging_charts_path }}"
    release_namespace: "{{ telemetry_monitoring_namespace }}"
    release_name: loki-stack
    state: present
    values_files: "{{ telemetry_logging_helm_default_values_file }}"
    create_namespace: true
    wait: true
  tags:
    - install
    - update

- name: Install traces Helm chart
  kubernetes.core.helm:
    name: opentelemetry-collector
    chart_ref: "{{ telemetry_traces_charts_path }}"
    release_namespace: "{{ telemetry_traces_namespace }}"
    release_name: opentelemetry-collector
    state: present
    values_files: "{{ telemetry_traces_helm_default_values_file }}"
    create_namespace: true
    wait: true
  tags:
    - install
    - update

- name: Install traces instrumentation Helm chart
  kubernetes.core.helm:
    name: opentelemetry-instrumentation
    chart_ref: "{{ telemetry_traces_instr_charts_path }}"
    release_namespace: "{{ telemetry_traces_namespace }}"
    release_name: opentelemetry-instrumentation
    state: present
    values_files: "{{ telemetry_traces_instr_helm_default_values_file }}"
    create_namespace: true
    wait: true
  tags:
    - install
    - update

- name: Delete CRD
  kubernetes.core.k8s:
    state: absent
    definition:
      apiVersion: apiextensions.k8s.io/v1
      kind: CustomResourceDefinition
      metadata:
        name: otelcols/otelcol-traces
  tags:
    - uninstall

- name: Delete mutating webhook configuration if it exists
  kubernetes.core.k8s:
    state: absent
    api_version: admissionregistration.k8s.io/v1
    kind: MutatingWebhookConfiguration
    name: telemetry-traces-otel-operator-mutation
  ignore_errors: true
  tags:
    - uninstall

- name: Delete validating webhook configuration if it exists
  kubernetes.core.k8s:
    state: absent
    api_version: admissionregistration.k8s.io/v1
    kind: ValidatingWebhookConfiguration
    name: telemetry-traces-otel-operator-validation
  ignore_errors: true
  tags:
    - uninstall

# temporary mitigation
- name: Patch otelcol-traces to remove finalizers using kubectl
  ansible.builtin.command:
    cmd: kubectl patch otelcols otelcol-traces -n {{ telemetry_traces_namespace }} --type='merge' -p '{"metadata":{"finalizers":[]}}'
  ignore_errors: true
  tags:
    - uninstall

- name: Delete monitoring Helm chart
  kubernetes.core.helm:
    name: kube-prometheus-stack
    release_namespace: "{{ telemetry_monitoring_namespace }}"
    state: absent
  tags:
    - uninstall

- name: Delete logging Helm chart
  kubernetes.core.helm:
    name: loki-stack
    release_namespace: "{{ telemetry_monitoring_namespace }}"
    state: absent
  tags:
    - uninstall

- name: Delete traces Helm chart
  kubernetes.core.helm:
    name: opentelemetry-collector
    release_namespace: "{{ telemetry_traces_namespace }}"
    state: absent
  tags:
    - uninstall

- name: Delete namespace
  kubernetes.core.k8s:
    state: absent
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: "{{ item }}"
  with_items:
    - "{{ telemetry_monitoring_namespace }}"
    - "{{ telemetry_traces_namespace }}"
  tags:
    - uninstall

- name: Remove password file
  ansible.builtin.file:
    state: absent
    path: "{{ item }}"
  with_items:
    - "{{ telemetry_password_file_path }}"
  tags:
    - uninstall
