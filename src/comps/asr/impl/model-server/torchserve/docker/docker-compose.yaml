services:
  asr-torchserve-model-server:
    build:
      context: ../
      dockerfile: ./docker/Dockerfile
    image: asr-torchserve:cpu
    container_name: asr-torchserve-model-server
    ports:
      - "${TORCHSERVE_PORT}:8300"
      - "${TORCHSERVE_MGMT_PORT}:8301"
      - "${TORCHSERVE_METRICS_PORT}:8302"
    environment:
      HF_TOKEN: ${HF_TOKEN}
      HTTP_PROXY: ${HTTP_PROXY}
      HTTPS_PROXY: ${HTTPS_PROXY}
      NO_PROXY: ${NO_PROXY}
      TORCHSERVE_AMP_DTYPE: ${TORCHSERVE_AMP_DTYPE}
      TORCHSERVE_BATCH_SIZE: ${TORCHSERVE_BATCH_SIZE}
      TORCHSERVE_DEVICE_TYPE: cpu
      TORCHSERVE_MAX_BATCH_DELAY: ${TORCHSERVE_MAX_BATCH_DELAY}
      TORCHSERVE_MAX_WORKERS: ${TORCHSERVE_MAX_WORKERS}
      TORCHSERVE_MIN_WORKERS: ${TORCHSERVE_MIN_WORKERS}
      TORCHSERVE_MODEL_NAME: ${TORCHSERVE_MODEL_NAME}
      TORCHSERVE_RESPONSE_TIMEOUT: ${TORCHSERVE_RESPONSE_TIMEOUT}
    runtime: runc
    ipc: host
    cpuset: "0-15"
    cap_add:
      - SYS_NICE

  asr_usvc:
    build:
      context: ../../../../../../
      dockerfile: ./comps/asr/impl/microservice/Dockerfile
      target: ${ASR_CONNECTOR}
    container_name: asr-torchserve-microservice
    environment:
      NO_PROXY: ${NO_PROXY}
      HTTP_PROXY: ${HTTP_PROXY}
      HTTPS_PROXY: ${HTTPS_PROXY}
      ASR_CONNECTOR: ${ASR_CONNECTOR}
      ASR_MODEL_NAME: ${TORCHSERVE_MODEL_NAME}
      ASR_MODEL_SERVER: torchserve
      ASR_MODEL_SERVER_ENDPOINT: http://localhost:${TORCHSERVE_PORT}
    ipc: host
    runtime: runc
    network_mode: host
    restart: unless-stopped
    depends_on:
      - asr-torchserve-model-server
