# Copyright (C) 2024 Intel Corporation
# SPDX-License-Identifier: Apache-2.0

[tox]
requires =
    tox==4.13.0
env_list =
    py312

# -----------------------------------------------------------------------------

[testenv:embeddings_unit_tests]
description = Run embeddings microservice unit tests
deps =
    -r tests/unit/requirements.txt
    -r comps/embeddings/impl/microservice/requirements.txt
    -r comps/embeddings/impl/microservice/requirements/langchain.txt
    -r comps/embeddings/impl/microservice/requirements/llama_index.txt
setenv =
    PYTHONPATH = .

commands =
    pytest -s --disable-warnings --cov=comps/embeddings --cov-report=term-missing tests/unit/embeddings {posargs}

# -----------------------------------------------------------------------------

[testenv:llms_unit_tests]
description = Run llms microservice unit tests
deps =
    -r tests/unit/requirements.txt
    -r comps/llms/impl/microservice/requirements.txt
setenv =
    PYTHONPATH = .

commands =
    pytest -s --disable-warnings --cov=comps/llms --cov-report=term-missing tests/unit/llms {posargs}

# -----------------------------------------------------------------------------

[testenv:dataprep_unit_tests]
description = Run dataprep microservice unit tests
allowlist_externals =
    apt
commands_pre =
    apt install -y libgl1
deps =
    -r tests/unit/requirements.txt
    -r comps/dataprep/impl/microservice/requirements.txt
setenv =
    PYTHONPATH = .

commands =
    pytest -s --disable-warnings --cov=comps/dataprep --cov-report=term-missing tests/unit/dataprep {posargs}

# -----------------------------------------------------------------------------

[testenv:ingestion_unit_tests]
description = Run ingestion microservice unit tests
deps =
    -r tests/unit/requirements.txt
    -r comps/ingestion/impl/microservice/requirements.txt
    -r comps/vectorstores/impl/requirements.txt
setenv =
    PYTHONPATH = .

commands =
    pytest -s --disable-warnings --cov=comps/ingestion --cov-report=term-missing tests/unit/ingestion {posargs}

# -----------------------------------------------------------------------------

[testenv:prompt_registry_unit_tests]
description = Run Prompt Registry microservice unit tests
deps =
    -r tests/unit/requirements.txt
    -r comps/prompt_registry/impl/microservice/requirements.txt
setenv =
    PYTHONPATH = .

commands =
    pytest -s --disable-warnings --cov=comps/prompt_registry --cov-report=term-missing tests/unit/prompt_registry {posargs}

# -----------------------------------------------------------------------------

[testenv:retrievers_unit_tests]
description = Run retriever microservice unit tests
deps =
    -r tests/unit/requirements.txt
    -r comps/retrievers/impl/microservice/requirements.txt
    -r comps/vectorstores/impl/requirements.txt
setenv =
    PYTHONPATH = .

commands =
    pytest -s --disable-warnings --cov=comps/retrievers --cov-report=term-missing tests/unit/retrievers {posargs}

# -----------------------------------------------------------------------------

[testenv:reranks_unit_tests]
description = Run reranks microservice unit tests
deps =
    -r tests/unit/requirements.txt
    -r comps/reranks/impl/microservice/requirements.txt
setenv =
    PYTHONPATH = .

commands =
    pytest -s --disable-warnings --cov=comps/reranks --cov-report=term-missing tests/unit/reranks {posargs}

# -----------------------------------------------------------------------------

[testenv:vectorstores_unit_tests]
description = Run vectorstores microservice unit tests
deps =
    -r tests/unit/requirements.txt
    -r comps/vectorstores/impl/requirements.txt
setenv =
    PYTHONPATH = .

commands =
    pytest -s --disable-warnings --cov=comps/vectorstores --cov-report=term-missing tests/unit/vectorstores {posargs}

# -----------------------------------------------------------------------------

[testenv:llm_guard_input_guardrail_unit_tests]
description = Run LLm Guard Input Guardrail microservice unit tests
deps =
    -r tests/unit/requirements.txt
    -r comps/guardrails/llm_guard_input_guardrail/impl/microservice/requirements.txt
setenv =
    PYTHONPATH = .

commands =
    pytest -s --disable-warnings --cov=comps/guardrails/llm_guard_input_guardrail --cov-report=term-missing tests/unit/guardrails/llm_guard_input_guardrail {posargs}

# -----------------------------------------------------------------------------

[testenv:llm_guard_output_guardrail_unit_tests]
description = Run LLm Guard Output Guardrail microservice unit tests
deps =
    -r tests/unit/requirements.txt
    -r comps/guardrails/llm_guard_output_guardrail/impl/microservice/requirements.txt
setenv =
    PYTHONPATH = .

commands =
    pytest -s --disable-warnings --cov=comps/guardrails/llm_guard_output_guardrail --cov-report=term-missing tests/unit/guardrails/llm_guard_output_guardrail {posargs}

# -----------------------------------------------------------------------------

[testenv:microservices]
description = Run microservices tests
changedir = tests/microservices
passenv =
    HF_TOKEN
deps =
    -r tests/microservices/requirements.txt
commands =
    pytest -s --capture=tee-sys -o junit_logging=all --junitxml=junitxml_report.xml --alluredir allure-results {posargs}

# -----------------------------------------------------------------------------

[testenv:e2e]
description = Run end-to-end tests on a running cluster
changedir = tests
passenv =
    NO_PROXY
    no_proxy
deps =
    -r tests/e2e/requirements.txt
commands =
    pytest -vv -s --capture=tee-sys -o junit_logging=all --junitxml=junitxml_report.xml --alluredir allure-results --clean-alluredir e2e {posargs}
