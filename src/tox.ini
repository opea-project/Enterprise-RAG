# Copyright (C) 2024-2025 Intel Corporation
# SPDX-License-Identifier: Apache-2.0

[tox]
requires =
    tox==4.24.1
    tox-uv==1.23.2
env_list =
    py312

# -----------------------------------------------------------------------------

[testenv:embeddings_unit_tests]
description = Run embeddings microservice unit tests
runner = uv-venv-lock-runner
set_env =
    PYTHONPATH = .
uv_sync_flags = --project, comps/embeddings/impl/microservice/pyproject.toml
extras =
    test
commands =
    pytest -s --disable-warnings --cov=comps/embeddings --cov-report=term-missing tests/unit/embeddings {posargs}

# -----------------------------------------------------------------------------

[testenv:llms_unit_tests]
description = Run llms microservice unit tests
runner = uv-venv-lock-runner
setenv =
    PYTHONPATH = .
uv_sync_flags = --project, comps/llms/impl/microservice/pyproject.toml
extras =
    test
commands =
    pytest -s --disable-warnings --cov=comps/llms --cov-report=term-missing tests/unit/llms {posargs}

# -----------------------------------------------------------------------------

[testenv:dataprep_unit_tests]
description = Run dataprep microservice unit tests
runner = uv-venv-lock-runner
allowlist_externals =
    apt
commands_pre =
    apt install -y libgl1
setenv =
    PYTHONPATH = .
uv_sync_flags = --project, comps/dataprep/impl/microservice/pyproject.toml
extras =
    test
commands =
    pytest -s --disable-warnings --cov=comps/dataprep --cov-report=term-missing tests/unit/dataprep {posargs}

# -----------------------------------------------------------------------------

[testenv:ingestion_unit_tests]
description = Run ingestion microservice unit tests
runner = uv-venv-lock-runner
setenv =
    PYTHONPATH = .
uv_sync_flags = --project, comps/ingestion/impl/microservice/pyproject.toml
extras =
    test
commands =
    pytest -s --disable-warnings --cov=comps/ingestion --cov-report=term-missing tests/unit/ingestion {posargs}

# -----------------------------------------------------------------------------

[testenv:prompt_registry_unit_tests]
description = Run Prompt Registry microservice unit tests
runner = uv-venv-lock-runner
setenv =
    PYTHONPATH = .
uv_sync_flags = --project, comps/prompt_registry/impl/microservice/pyproject.toml
extras =
    test
commands =
    pytest -s --disable-warnings --cov=comps/prompt_registry --cov-report=term-missing tests/unit/prompt_registry {posargs}

# -----------------------------------------------------------------------------

[testenv:retrievers_unit_tests]
description = Run retriever microservice unit tests
runner = uv-venv-lock-runner
setenv =
    PYTHONPATH = .
uv_sync_flags = --project, comps/retrievers/impl/microservice/pyproject.toml
extras =
    test
commands =
    pytest -s --disable-warnings --cov=comps/retrievers --cov-report=term-missing tests/unit/retrievers {posargs}

# -----------------------------------------------------------------------------

[testenv:reranks_unit_tests]
description = Run reranks microservice unit tests
runner = uv-venv-lock-runner
setenv =
    PYTHONPATH = .
uv_sync_flags = --project, comps/reranks/impl/microservice/pyproject.toml
extras =
    test
commands =
    pytest -s --disable-warnings --cov=comps/reranks --cov-report=term-missing tests/unit/reranks {posargs}

# -----------------------------------------------------------------------------

[testenv:vectorstores_unit_tests]
description = Run vectorstores microservice unit tests
runner = uv-venv-lock-runner
setenv =
    PYTHONPATH = .
uv_sync_flags = --project, comps/vectorstores/impl/requirements/pyproject.toml
extras =
    test
commands =
    pytest -s --disable-warnings --cov=comps/vectorstores --cov-report=term-missing tests/unit/vectorstores {posargs}

# -----------------------------------------------------------------------------

[testenv:llm_guard_input_guardrail_unit_tests]
description = Run LLm Guard Input Guardrail microservice unit tests
runner = uv-venv-lock-runner
setenv =
    PYTHONPATH = .
uv_sync_flags = --project, comps/guardrails/llm_guard_input_guardrail/impl/microservice/pyproject.toml
extras =
    test
commands =
    pytest -s --disable-warnings --cov=comps/guardrails/llm_guard_input_guardrail --cov-report=term-missing tests/unit/guardrails/llm_guard_input_guardrail {posargs}

# -----------------------------------------------------------------------------

[testenv:llm_guard_output_guardrail_unit_tests]
description = Run LLm Guard Output Guardrail microservice unit tests
runner = uv-venv-lock-runner
setenv =
    PYTHONPATH = .
uv_sync_flags = --project, comps/guardrails/llm_guard_output_guardrail/impl/microservice/pyproject.toml
extras =
    test
commands =
    pytest -s --disable-warnings --cov=comps/guardrails/llm_guard_output_guardrail --cov-report=term-missing tests/unit/guardrails/llm_guard_output_guardrail {posargs}

# -----------------------------------------------------------------------------

[testenv:language_detection_unit_tests]
description = Run Language Detection microservice unit tests
runner = uv-venv-lock-runner
setenv =
    PYTHONPATH = .
uv_sync_flags = --project, comps/language_detection/impl/microservice/pyproject.toml
extras =
    test
commands =
    pytest -s --disable-warnings --cov=comps/language_detection --cov-report=term-missing tests/unit/language_detection {posargs}

# -----------------------------------------------------------------------------

[testenv:edp_unit_tests]
description = Run Enhanced Dataprep unit tests
runner = uv-venv-lock-runner
setenv =
    PYTHONPATH = .
uv_sync_flags = --project, edp/app/pyproject.toml
extras =
    test
commands =
    pytest -s --disable-warnings --cov=edp/app --cov-report=term-missing edp/tests {posargs}

# -----------------------------------------------------------------------------

[testenv:microservices]
description = Run microservices tests
changedir = tests/microservices
passenv =
    HF_TOKEN
deps =
    -r tests/microservices/requirements.txt
commands =
    pytest -s --capture=tee-sys -o junit_logging=all --junitxml=junitxml_report.xml --alluredir allure-results {posargs}

# -----------------------------------------------------------------------------

[testenv:e2e]
description = Run end-to-end tests on a running cluster
changedir = tests
setenv =
    http_proxy=
    https_proxy=
    HTTP_PROXY=
    HTTPS_PROXY=
passenv =
    KUBECONFIG
    NO_PROXY
    no_proxy
deps =
    -r tests/e2e/requirements.txt
commands =
    pytest -vv -s --capture=tee-sys -o junit_logging=all --junitxml=junitxml_report.xml --alluredir allure-results --log-format="%(asctime)s %(levelname)s [%(module)s] %(message)s" --clean-alluredir e2e {posargs}

[testenv:llm_guard_dataprep_guardrail_unit_tests]
description = Run LLm Guard Dataprep Guardrail microservice unit tests
runner = uv-venv-lock-runner
setenv =
    PYTHONPATH = .
uv_sync_flags = --project, comps/guardrails/llm_guard_dataprep_guardrail/impl/microservice/pyproject.toml
extras =
    test
commands =
    pytest -s --disable-warnings --cov=comps/guardrails/llm_guard_dataprep_guardrail --cov-report=term-missing tests/unit/guardrails/llm_guard_dataprep_guardrail {posargs}

# -----------------------------------------------------------------------------